// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: pkg/distributed/remote/pb/fftb.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DealerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization string                `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Type          string                `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Id            string                `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	OrderId       string                `protobuf:"bytes,4,opt,name=orderId,proto3" json:"orderId,omitempty"`
	ConvertParams *ConvertSegmentParams `protobuf:"bytes,5,opt,name=convertParams,proto3" json:"convertParams,omitempty"`
}

func (x *DealerRequest) Reset() {
	*x = DealerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealerRequest) ProtoMessage() {}

func (x *DealerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealerRequest.ProtoReflect.Descriptor instead.
func (*DealerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_distributed_remote_pb_fftb_proto_rawDescGZIP(), []int{0}
}

func (x *DealerRequest) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *DealerRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DealerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DealerRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DealerRequest) GetConvertParams() *ConvertSegmentParams {
	if x != nil {
		return x.ConvertParams
	}
	return nil
}

type StorageClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization string `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	SegmentId     string `protobuf:"bytes,2,opt,name=segmentId,proto3" json:"segmentId,omitempty"`
}

func (x *StorageClaimRequest) Reset() {
	*x = StorageClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClaimRequest) ProtoMessage() {}

func (x *StorageClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageClaimRequest.ProtoReflect.Descriptor instead.
func (*StorageClaimRequest) Descriptor() ([]byte, []int) {
	return file_pkg_distributed_remote_pb_fftb_proto_rawDescGZIP(), []int{1}
}

func (x *StorageClaimRequest) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *StorageClaimRequest) GetSegmentId() string {
	if x != nil {
		return x.SegmentId
	}
	return ""
}

type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string                `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id            string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	OrderId       string                `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	ConvertParams *ConvertSegmentParams `protobuf:"bytes,4,opt,name=convertParams,proto3" json:"convertParams,omitempty"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_pkg_distributed_remote_pb_fftb_proto_rawDescGZIP(), []int{2}
}

func (x *Segment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Segment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Segment) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Segment) GetConvertParams() *ConvertSegmentParams {
	if x != nil {
		return x.ConvertParams
	}
	return nil
}

type ConvertSegmentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoCodec       string `protobuf:"bytes,1,opt,name=videoCodec,proto3" json:"videoCodec,omitempty"`
	HwAccel          string `protobuf:"bytes,2,opt,name=hwAccel,proto3" json:"hwAccel,omitempty"`
	VideoBitRate     string `protobuf:"bytes,3,opt,name=videoBitRate,proto3" json:"videoBitRate,omitempty"`
	VideoQuality     int32  `protobuf:"varint,4,opt,name=videoQuality,proto3" json:"videoQuality,omitempty"`
	Preset           string `protobuf:"bytes,5,opt,name=preset,proto3" json:"preset,omitempty"`
	Scale            string `protobuf:"bytes,6,opt,name=scale,proto3" json:"scale,omitempty"`
	KeyframeInterval int32  `protobuf:"varint,7,opt,name=keyframeInterval,proto3" json:"keyframeInterval,omitempty"`
	Muxer            string `protobuf:"bytes,8,opt,name=muxer,proto3" json:"muxer,omitempty"`
	Position         int32  `protobuf:"varint,9,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ConvertSegmentParams) Reset() {
	*x = ConvertSegmentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertSegmentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertSegmentParams) ProtoMessage() {}

func (x *ConvertSegmentParams) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertSegmentParams.ProtoReflect.Descriptor instead.
func (*ConvertSegmentParams) Descriptor() ([]byte, []int) {
	return file_pkg_distributed_remote_pb_fftb_proto_rawDescGZIP(), []int{3}
}

func (x *ConvertSegmentParams) GetVideoCodec() string {
	if x != nil {
		return x.VideoCodec
	}
	return ""
}

func (x *ConvertSegmentParams) GetHwAccel() string {
	if x != nil {
		return x.HwAccel
	}
	return ""
}

func (x *ConvertSegmentParams) GetVideoBitRate() string {
	if x != nil {
		return x.VideoBitRate
	}
	return ""
}

func (x *ConvertSegmentParams) GetVideoQuality() int32 {
	if x != nil {
		return x.VideoQuality
	}
	return 0
}

func (x *ConvertSegmentParams) GetPreset() string {
	if x != nil {
		return x.Preset
	}
	return ""
}

func (x *ConvertSegmentParams) GetScale() string {
	if x != nil {
		return x.Scale
	}
	return ""
}

func (x *ConvertSegmentParams) GetKeyframeInterval() int32 {
	if x != nil {
		return x.KeyframeInterval
	}
	return 0
}

func (x *ConvertSegmentParams) GetMuxer() string {
	if x != nil {
		return x.Muxer
	}
	return ""
}

func (x *ConvertSegmentParams) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type StorageClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *StorageClaim) Reset() {
	*x = StorageClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClaim) ProtoMessage() {}

func (x *StorageClaim) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_distributed_remote_pb_fftb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageClaim.ProtoReflect.Descriptor instead.
func (*StorageClaim) Descriptor() ([]byte, []int) {
	return file_pkg_distributed_remote_pb_fftb_proto_rawDescGZIP(), []int{4}
}

func (x *StorageClaim) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_pkg_distributed_remote_pb_fftb_proto protoreflect.FileDescriptor

var file_pkg_distributed_remote_pb_fftb_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x64, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x66, 0x74, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x61, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x13, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x64,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x77, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x77, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6b, 0x65, 0x79, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x6b, 0x65, 0x79, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x78, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x75, 0x78, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x32, 0xbf, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x08, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x14, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x14, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x14, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x1a, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12,
	0x14, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2f, 0x66,
	0x66, 0x74, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x64, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_distributed_remote_pb_fftb_proto_rawDescOnce sync.Once
	file_pkg_distributed_remote_pb_fftb_proto_rawDescData = file_pkg_distributed_remote_pb_fftb_proto_rawDesc
)

func file_pkg_distributed_remote_pb_fftb_proto_rawDescGZIP() []byte {
	file_pkg_distributed_remote_pb_fftb_proto_rawDescOnce.Do(func() {
		file_pkg_distributed_remote_pb_fftb_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_distributed_remote_pb_fftb_proto_rawDescData)
	})
	return file_pkg_distributed_remote_pb_fftb_proto_rawDescData
}

var file_pkg_distributed_remote_pb_fftb_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_distributed_remote_pb_fftb_proto_goTypes = []interface{}{
	(*DealerRequest)(nil),        // 0: DealerRequest
	(*StorageClaimRequest)(nil),  // 1: StorageClaimRequest
	(*Segment)(nil),              // 2: Segment
	(*ConvertSegmentParams)(nil), // 3: ConvertSegmentParams
	(*StorageClaim)(nil),         // 4: StorageClaim
}
var file_pkg_distributed_remote_pb_fftb_proto_depIdxs = []int32{
	3, // 0: DealerRequest.convertParams:type_name -> ConvertSegmentParams
	3, // 1: Segment.convertParams:type_name -> ConvertSegmentParams
	0, // 2: Dealer.AllocateSegment:input_type -> DealerRequest
	1, // 3: Dealer.GetOutputStorageClaim:input_type -> StorageClaimRequest
	1, // 4: Dealer.AllocateInputStorageClaim:input_type -> StorageClaimRequest
	1, // 5: Dealer.GetInputStorageClaim:input_type -> StorageClaimRequest
	1, // 6: Dealer.AllocateOutputStorageClaim:input_type -> StorageClaimRequest
	2, // 7: Dealer.AllocateSegment:output_type -> Segment
	4, // 8: Dealer.GetOutputStorageClaim:output_type -> StorageClaim
	4, // 9: Dealer.AllocateInputStorageClaim:output_type -> StorageClaim
	4, // 10: Dealer.GetInputStorageClaim:output_type -> StorageClaim
	4, // 11: Dealer.AllocateOutputStorageClaim:output_type -> StorageClaim
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_distributed_remote_pb_fftb_proto_init() }
func file_pkg_distributed_remote_pb_fftb_proto_init() {
	if File_pkg_distributed_remote_pb_fftb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_distributed_remote_pb_fftb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_distributed_remote_pb_fftb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_distributed_remote_pb_fftb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_distributed_remote_pb_fftb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertSegmentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_distributed_remote_pb_fftb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_distributed_remote_pb_fftb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_distributed_remote_pb_fftb_proto_goTypes,
		DependencyIndexes: file_pkg_distributed_remote_pb_fftb_proto_depIdxs,
		MessageInfos:      file_pkg_distributed_remote_pb_fftb_proto_msgTypes,
	}.Build()
	File_pkg_distributed_remote_pb_fftb_proto = out.File
	file_pkg_distributed_remote_pb_fftb_proto_rawDesc = nil
	file_pkg_distributed_remote_pb_fftb_proto_goTypes = nil
	file_pkg_distributed_remote_pb_fftb_proto_depIdxs = nil
}
